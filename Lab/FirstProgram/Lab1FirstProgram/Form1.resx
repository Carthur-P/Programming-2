<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gEfa48LzlwAAAABJRU5ErkJggg==
</value>
  </data>
</root>